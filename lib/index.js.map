{"version":3,"sources":["../src/index.js"],"names":["isObject","isPromise","assert","deepCopy","testable","target","Wex","x","args","Promise","history","installModule","self","state","$state","on","bind","off","emit","mapMutations","commit","type","store","n","m","push","name","new","old","_type","_payload","payload","unifyPayload","call","entry","$mutations","$Dev","console","error","setState","event","fn","ctx","_stores","$name","i","cb","undefined","slice","len","length","apply","arguments","toString","splice","Mutation","$committig","$actions","Object","create","$wrappedGetters","$subscribers","mutations","res","normalizeMap","forEach","ref","key","val","mappedMutation","map","Array","isArray","keys"],"mappings":"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","file":"index.js","sourcesContent":["/**\r\n * no use strict \r\n */\r\n\r\n/**\r\n * Wex 0.01\r\n * (c) 2018 Mayako\r\n * 扫码点餐小程序用简易状态机\r\n */\r\n\r\nimport {\r\n  isObject,\r\n  isPromise,\r\n  assert,\r\n  deepCopy\r\n} from './utils'\r\nfunction testable(target) {\r\n\r\n}\r\n\r\n@testable\r\nclass Wex {\r\n  constructor(x) {\r\n\r\n  }\r\n  init(args = {}) {\r\n    assert(typeof Promise !== 'undefined', `Wex requires a Promise polyfill in this browser.`)\r\n    this.history = [];\r\n    installModule(args, this);\r\n    let self = this;\r\n    return {\r\n      history:this.history,\r\n      get state() {\r\n        return deepCopy(self.$state)\r\n      },\r\n      on: this.on.bind(this),\r\n      off: this.off.bind(this),\r\n      emit: this.emit.bind(this),\r\n      mapMutations: this.mapMutations,\r\n      commit: (type, ...args) => {\r\n        return this.commit(type, {\r\n          store: this,\r\n          args\r\n        })\r\n      }\r\n    }\r\n  }\r\n  // state写入方法\r\n  setState(n, m) {\r\n    if (typeof m == 'Array' || typeof m == \"object\") {\r\n      this.history.push({\r\n        name: n,\r\n        new: m,\r\n        old: this.$state[n]\r\n      })\r\n      this.emit(n, m);\r\n      this.$state[n] = m;\r\n    } else {\r\n      this.history.push({\r\n        name: n,\r\n        new: m,\r\n        old: this.$state[n]\r\n      })\r\n      this.emit(n, m);\r\n      this.$state[n] = m;\r\n    }\r\n\r\n  }\r\n  // commit方法\r\n  commit(_type, _payload) {\r\n    const type = _type;\r\n    const payload = unifyPayload.call(this, _payload);\r\n    const entry = this.$mutations[type]\r\n    if (!entry) {\r\n      if (this.$Dev) {\r\n        console.error(`[wex] unknown mutation type: ${type}`)\r\n      }\r\n      return\r\n    }\r\n    return entry({\r\n      state: payload.store.state,\r\n      setState: payload.store.setState.bind(payload.store),\r\n      commit: payload.store.commit.bind(payload.store),\r\n      args: payload.args\r\n    })\r\n\r\n  }\r\n  // 设置只读属性\r\n  get state() {\r\n    return deepCopy(this.$state);\r\n  }\r\n  set state(x) {\r\n    console.error('[wex] is not allowed change state ')\r\n    return\r\n  }\r\n  get Mutation() {\r\n    return this.$mutations;\r\n  }\r\n  // 触发自动响应，用于替代computed\r\n  on(event, fn, ctx) {\r\n    if (typeof fn != 'function') {\r\n      console.error('fn must be a function')\r\n      return\r\n    }\r\n    this._stores = this._stores || {};\r\n    // 删除重复的响应事件\r\n    let name = ctx.$name;\r\n    for (var i in this._stores[event]) {\r\n      if (this._stores[event][i].ctx.$name == name) {\r\n        this.off(event, fn)\r\n      }\r\n    }\r\n\r\n    // 添加函数到stores里\r\n    (this._stores[event] = this._stores[event] || []).push({\r\n      cb: fn,\r\n      ctx: ctx\r\n    })\r\n    // 添加之后执行一次触发事件用于更新第一次数据\r\n    this.emit(event, this.state[event])\r\n  }\r\n  emit(event, ...state) {\r\n    this._stores = this._stores || {}\r\n    var store = this._stores[event],\r\n      args\r\n    // 如果触发了不存在的stores，stores必须要提前定义\r\n    if (this.state[event] == null || this.state[event] == undefined) {\r\n      console.error(event + ' is undefined')\r\n      return false;\r\n      // this.state[event] =state[0]; \r\n    }\r\n    if (store) {\r\n      store = store.slice(0)\r\n      args = state;\r\n      this.$state[event] = args[0]\r\n      for (var i = 0, len = store.length; i < len; i++) {\r\n        store[i].cb.apply(store[i].ctx, args)\r\n      }\r\n    }\r\n  }\r\n  off(event, fn) {\r\n    this._stores = this._stores || {}\r\n    // 删除全部\r\n    if (!arguments.length) {\r\n      this._stores = {}\r\n      return\r\n    }\r\n    var store = this._stores[event]\r\n    if (!store) return\r\n    // 删除同名全部\r\n    if (arguments.length === 1) {\r\n      delete this._stores[event]\r\n      return\r\n    }\r\n    // 删除单独\r\n    var cb\r\n    for (var i = 0, len = store.length; i < len; i++) {\r\n      cb = store[i].cb\r\n      // 判断匿名函数是否一致，因为前面已经判断是否属于同一作用域，所以直接执行tostring()判断\r\n      if (cb.toString() == fn.toString()) {\r\n        store.splice(i, 1)\r\n        break\r\n      }\r\n    }\r\n    return\r\n  }\r\n}\r\n\r\nfunction unifyPayload(...payload) {\r\n  if (!payload[0].store) {\r\n    payload = {\r\n      store: this,\r\n      args: payload\r\n    }\r\n    return payload\r\n  }\r\n  return payload[0]\r\n}\r\n\r\nfunction installModule(args, store) {\r\n  store.$state = args.state;\r\n  store.$mutations = args.Mutation;\r\n  store.$committig = false\r\n  store.$actions = Object.create(null)\r\n  store.$wrappedGetters = Object.create(null)\r\n  store.$subscribers = [];\r\n  store.mapMutations = mapMutations(args.Mutation, store)\r\n}\r\n\r\nfunction mapMutations(mutations, store) {\r\n  var res = {}\r\n  normalizeMap(mutations).forEach(function (ref) {\r\n    var key = ref.key;\r\n    var val = ref.val;\r\n\r\n    res[key] = function mappedMutation() {\r\n      var args = [],\r\n        len = arguments.length;\r\n      while (len--) args[len] = arguments[len]; // 一个数组缓存传入的参数\r\n      // val作为commit函数的第一个参数type， 剩下的参数依次是payload 和 options\r\n      return store.commit(key, {\r\n        store,\r\n        args\r\n      });\r\n    }\r\n  })\r\n  return res\r\n}\r\n\r\nfunction normalizeMap(map) {\r\n  return Array.isArray(map) ?\r\n    map.map(function (key) {\r\n      return ({\r\n        key: key,\r\n        val: key\r\n      });\r\n    }) :\r\n    Object.keys(map).map(function (key) {\r\n      return ({\r\n        key: key,\r\n        val: map[key]\r\n      });\r\n    })\r\n}\r\nexport {\r\n  Wex\r\n};\r\n"]}